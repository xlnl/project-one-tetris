Technical Requirements
Your app must:
    Display a game in the browser
    Switch turns between two players, or have the user play the computer (AI or obstacles)
    Design logic for winning & visually display which player won
    Include separate HTML / CSS / JavaScript files
    Stick with KISS (Keep It Simple Stupid) and DRY (Don't Repeat Yourself) principles
    Use Javascript for DOM manipulation
    Deploy your game online, where the rest of the world can access it**
    Use semantic markup for HTML and CSS (adhere to best practices)

MVP FOR TETRIS 
    Data
        Game Logic: 
            rotates game pieces (of varying sizes) to fill rows => add filled rows to scoreboard 
            pieces are displayed through patterns of arrays, moving on its own (free up on eventlisteners 'click') 
            game loop --> what's happening at every frame

            Win: 
                fill rows + eliminate w/o reaching the top (OR BEFORE TIME ENDS)
            
            Lose: 
                reach the top row of the game board

    Presentation
        Pieces - different colors, different shapes up to 7 pieces
            movement - rotates 360, side by side, down 
            
        Game board/canvas
            x columns, y rows
            units -> size (width x height)
            figure out walls directions (top, right, bottom, left) (to detect collision + rotation movement)
        
        Display Player (up top right)
            to track if winner
        
    Views
        ????

    Style
        Pieces - different colors, different shapes up to 7 pieces
        Game board 

    DOM manipulation
        Canvas elements -> board, pieces, context
        Movement between pieces -> movement handler function with keyCode
            setTimer
            increment down for each unit of game board
            pieces rotate in place (no movement)
            pieces after rotation = movement is same
        Collision detection (HTML5 Recording @ 2:02:00+)
            for piece rotation 
                check if there's a collision after rotation
                if there is a collision, figure out which side the collision happened (figure out how)
            * account for width + height of pieces for coordinates
            switch statements 

BONUS
    Data
    Presentation
        Add a score board to track # of filled rows 
        Include instructions
    Views
    Style
    DOM manipulation